AWSTemplateFormatVersion: "2010-09-09"
Description: Setup IAM user for GitHub Actions and IAM role for CloudFormation

Parameters:
  GitHubActionsUserName:
    Type: String
    Default: ga-cloudformation-deploy
  CloudFormationDeploymentRoleName:
    Type: String
    Default: ga-cloudformation-stack-role
  ECSTaskExecutionRoleName:
    Type: String
    Default: ga-ecs-task-execution-role
  ECSInstanceRoleName:
    Type: String
    Default: ga-ecs-instance-role
  ECSServiceRoleName:
    Type: String
    Default: ga-ecs-service-role
  ECSPolicyName:
    Type: String
    Default: ga-deploy-task-definition-ecs

Resources:
  GitHubActionsUser:
    Type: AWS::IAM::User
    Properties:
      UserName: !Ref GitHubActionsUserName

  # The permissions that the GitHub Actions deployment workflow will have
  GitHubActionsUserPolicy:
    Type: AWS::IAM::Policy
    Properties:
      Users:
        - !Ref GitHubActionsUser
      PolicyName: allow-ga-cloudformation-deploy
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Action:
              - "cloudformation:*"
              - "ec2:DescribeVpcs"
              - "ec2:DescribeSubnets"
              - "ecr:GetAuthorizationToken"
            Effect: Allow
            Resource: "*"
          - Action: "cloudformation:DeleteStack"
            Effect: Deny
            Resource: "*"
          - Action: "iam:PassRole"
            Effect: Allow
            Resource: !GetAtt CloudFormationDeploymentRole.Arn
          - Action:
              - "ecr:GetDownloadUrlForLayer"
              - "ecr:BatchGetImage"
              - "ecr:BatchCheckLayerAvailability"
              - "ecr:PutImage"
              - "ecr:InitiateLayerUpload"
              - "ecr:UploadLayerPart"
              - "ecr:CompleteLayerUpload"
            Effect: Allow
            Resource: !Sub "arn:${AWS::Partition}:ecr:*:${AWS::AccountId}:repository/ga-*"

  GitHubActionsPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties: 
      Description: "Deploy task defition for ECS"
      ManagedPolicyName: !Ref ECSPolicyName
      PolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Sid: "RegisterTaskDefinition"
            Action:
              - "ecs:RegisterTaskDefinition"
            Effect: Allow
            Resource: "*"
          - Sid: "PassRolesInTaskDefinition"
            Action:
              - "iam:PassRole"
            Effect: Allow
            Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ga-ecs-task-execution-role"
          - Sid: "DeployService"
            Action:
              - "ecs:UpdateService"
              - "ecs:DescribeServices"
            Effect: Allow
            Resource: !Sub "arn:${AWS::Partition}:ecs:*:${AWS::AccountId}:service/ga-stack02-*"
      Users:
        - !Ref GitHubActionsUser

  # The permissions that the CloudFormation stack deployments will have
  CloudFormationDeploymentRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref CloudFormationDeploymentRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - cloudformation.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonVPCFullAccess
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryFullAccess
        - arn:aws:iam::aws:policy/AmazonECS_FullAccess
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
        - arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      Policies:
        - PolicyName: allow-pass-role-for-ecs-task-exec-role
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action: "iam:PassRole"
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/ga-*"
              - Action: [
                  'iam:CreateInstanceProfile',
                  'iam:DeleteInstanceProfile',
                  'iam:GetInstanceProfile',
                  'iam:RemoveRoleFromInstanceProfile',
                  'iam:AddRoleToInstanceProfile'
                ]
                Effect: Allow
                Resource: !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:instance-profile/ga-*"

  # This is a role used to start and manage ECS tasks (pull the container image, etc)
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ECSTaskExecutionRoleName
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  # This is a role used for the Amazon ECS container agent makes calls to the Amazon ECS API actions on your behalf
  ECSInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ECSInstanceRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role

  ECSServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Ref ECSServiceRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: 
              - ecs.amazonaws.com
          Action: 
            - "sts:AssumeRole"
      Path: /
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action: [
              'elasticloadbalancing:DeregisterInstancesFromLoadBalancer',
              'elasticloadbalancing:DeregisterTargets',
              'elasticloadbalancing:Describe*',
              'elasticloadbalancing:RegisterInstancesWithLoadBalancer',
              'elasticloadbalancing:RegisterTargets',
              'ec2:Describe*',
              'ec2:AuthorizeSecurityGroupIngress'
            ]
            Resource: '*'
